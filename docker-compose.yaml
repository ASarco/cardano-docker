version: "3.7"
# Use --compatibility flag with "docker-compose up" for deploy key translation

services:

  cardano_node:
    container_name: cardano_node
    environment:
      CNODE_HOSTNAME: 'CHANGE ME'
    image: cardano_node:latest
    command: ["start-relay.sh"]           # Comment for node producer or relay with topology updater
    #command: ["start-with-topology.sh"]  # Uncomment for relay with topology updater
    #command: ["start-producer.sh"]       # Uncomment for node producer
    #command: ["tail","-f","/dev/null"]   # Used for maintenance purpose
    volumes:
      - type: volume
        source: cardano-socket
        target: /cardano/socket
      - type: volume
        source: cardano-db
        target: /cardano/db
      - type: bind
        source: ./config
        target: /cardano/config
        read_only: true
    network_mode: host
    restart: on-failure
    stop_grace_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    deploy:
      resources:
        limits:
          cpus: '3'
          memory: 6G

  cardano_monitor:
    container_name: cardano_monitor
    image: cardano_monitor:latest
    command: ["start-monitoring.sh"]
    depends_on:
      - cardano_node
    network_mode: host
    restart: on-failure
    stop_grace_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"


#  postgres:
#    image: arm64v8/postgres:11.5-alpine
#    environment:
#      - POSTGRES_LOGGING=true
#      - POSTGRES_DB_FILE=/run/secrets/postgres_db
#      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
#      - POSTGRES_USER_FILE=/run/secrets/postgres_user
#    secrets:
#      - postgres_password
#      - postgres_user
#      - postgres_db
#    volumes:
#      - postgres:/var/lib/postgresql/data
#    ports:
#      - 5432:5432
#    restart: on-failure
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "200k"
#        max-file: "10"

#  cardano_db_sync:
#    container_name: cardano_db_sync
#    image: cardano_db_sync:latest
#    command: ["tail", "-f", "/dev/null"]
#    depends_on:
#      - cardano_node
#      - postgres
#    secrets:
#      - postgres_password
#      - postgres_user
#      - postgres_db
#    volumes:
#      - type: volume
#        source: cardano-node
#        target: /root/node_data
#    restart: on-failure
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "200k"
#        max-file: "10"

#secrets:
#  postgres_db:
#    file: ./config/secrets/postgres_db
#  postgres_password:
#    file: ./config/secrets/postgres_password
#  postgres_user:
#    file: ./config/secrets/postgres_user

volumes:
  cardano-db:
  cardano-socket:
#  postgres:
